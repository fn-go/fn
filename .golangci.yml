linters-settings:
  dupl:
    threshold: 100
  funlen:
    lines: 100
    statements: 50
  gci:
    local-prefixes: github.com/golangci/golangci-lint
  goconst:
    min-len: 2
    min-occurrences: 2
  gocritic:
    enabled-tags:
    - diagnostic
    - experimental
    - opinionated
    - performance
    - style
    disabled-checks:
    - dupImport  # https://github.com/go-critic/go-critic/issues/845
    - ifElseChain
    - octalLiteral
    - whyNoLint
    - wrapperFunc
  gocyclo:
    min-complexity: 15
  golint:
    min-confidence: 0
  gomnd:
    settings:
      mnd:
        # don't include the "operation" and "assign"
        checks: argument,case,condition,return
  lll:
    line-length: 140
  maligned:
    suggest-new: true
  misspell:
    locale: US
  nolintlint:
    allow-leading-space: true  # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false  # report any unused nolint directives
    require-explanation: false  # don't require an explanation for nolint directives
    require-specific: false  # don't require nolint directives to be specific about which linter is being skipped

linters:
  disable-all: true
  enable:
  - bodyclose
  - deadcode
  - depguard
  - dogsled
  - dupl
  - errcheck
  - exhaustive
  - funlen
  - goconst
  - gocritic
  - gocyclo
  - gofmt
  - goimports
  - revive
  - goprintffuncname
  - gosec
  - gosimple
  - govet
  - ineffassign
  - lll
  - misspell
  - nakedret
  - noctx
  - nolintlint
  - rowserrcheck
  - exportloopref
  - staticcheck
  - structcheck
  - stylecheck
  - typecheck
  - unconvert
  - unparam
  - unused
  - varcheck
  - whitespace

issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
  - path: _test\.go
    linters:
    - gomnd